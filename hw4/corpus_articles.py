from flask import Flask, render_template, request, url_for
from math import log
import glob
from pymystem3 import Mystem
import re
import operator
import json

app = Flask (__name__)



def score_BM25(n, qf, N, dl, avdl, k1):
    K = compute_K(dl, avdl, k1)
    IDF = log((N - n + 0.5) / (n + 0.5))
    frac = ((k1 + 1) * qf) / (K + qf)
    return IDF * frac
    

def compute_K(dl, avdl, k1):
    b = 0.75
    return k1 * ((1-b) + b * (float(dl)/float(avdl))) 


def BM25_foralldocs(query, list_of_docs, frequency, index_dict, BM25_for_all, stop_words, k1):
    
    avdl = 0
    total_dl = 0
    
    for doc in list_of_docs:
        text = text_to_words(doc, stop_words)
        total_dl += len(text)
        
    for n_text, doc in enumerate(list_of_docs):
        text = text_to_words(doc, stop_words)
        for word in query:
            if word not in text or word in stop_words:
                pass
            else:
                score = score_BM25(len(index_dict[word]), frequency[word][str(n_text)]/len(text), len(list_of_docs), 
                                   len(text), (total_dl/len(list_of_docs)), k1)
                if str(n_text) in BM25_for_all:
                    BM25_for_all[str(n_text)] = BM25_for_all[str(n_text)] + score
                else:
                    BM25_for_all[str(n_text)] = score
        
    return BM25_for_all

m = Mystem()
def text_to_words(filename, stop_words):

    all_words = m.lemmatize(open(filename, 'r', encoding='UTF-8').read())

    all_words_clean = []
    for w in all_words:
        if w in stop_words or re.search('[А-Яа-я]', w) == None:
            pass
        else:
            all_words_clean.append(w)
    
    return all_words_clean



@app.route('/')
def index():
    return render_template('index.html')

@app.route('/search',  methods=['get'])
def search():
    results = {}
    k1 = 2.0
    b = 0.75
    stop_words_list = ["а","алло","без","белый","близко","более","больше","большой","будем","будет","будете","будешь","будто","буду","будут","будь","бы","бывает","бывь","был","была","были","было","быть","в","важная","важное","важные","важный","вам","вами","вас","ваш","ваша","ваше","ваши","вверх","вдали","вдруг","ведь","везде","вернуться","весь","вечер","взгляд","взять","вид","видеть","вместе","вниз","внизу","во","вода","война","вокруг","вон","вообще","вопрос","восемнадцатый","восемнадцать","восемь","восьмой","вот","впрочем","времени","время","все","всегда","всего","всем","всеми","всему","всех","всею","всю","всюду","вся","всё","второй","вы","выйти","г","где","главный","глаз","говорил","говорит","говорить","год","года","году","голова","голос","город","да","давать","давно","даже","далекий","далеко","дальше","даром","дать","два","двадцатый","двадцать","две","двенадцатый","двенадцать","дверь","двух","девятнадцатый","девятнадцать","девятый","девять","действительно","дел","делать","дело","день","деньги","десятый","десять","для","до","довольно","долго","должно","должный","дом","дорога","друг","другая","другие","других","друго","другое","другой","думать","душа","е","его","ее","ей","ему","если","есть","еще","ещё","ею","её","ж","ждать","же","жена","женщина","жизнь","жить","за","занят","занята","занято","заняты","затем","зато","зачем","здесь","земля","знать","значит","значить","и","идти","из","или","им","именно","иметь","ими","имя","иногда","их","к","каждая","каждое","каждые","каждый","кажется","казаться","как","какая","какой","кем","книга","когда","кого","ком","комната","кому","конец","конечно","которая","которого","которой","которые","который","которых","кроме","кругом","кто","куда","лежать","лет","ли","лицо","лишь","лучше","любить","люди","м","маленький","мало","мать","машина","между","меля","менее","меньше","меня","место","миллионов","мимо","минута","мир","мира","мне","много","многочисленная","многочисленное","многочисленные","многочисленный","мной","мною","мог","могут","мож","может","можно","можхо","мои","мой","мор","москва","мочь","моя","моё","мы","на","наверху","над","надо","назад","наиболее","найти","наконец","нам","нами","народ","нас","начала","начать","наш","наша","наше","наши","не","него","недавно","недалеко","нее","ней","некоторый","нельзя","нем","немного","нему","непрерывно","нередко","несколько","нет","нею","неё","ни","нибудь","ниже","низко","никакой","никогда","никто","никуда","ними","них","ничего","ничто","но","новый","нога","ночь","ну","нужно","нужный","нх","о","об","оба","обычно","один","одиннадцатый","одиннадцать","однажды","однако","одного","одной","оказаться","окно","около","он","она","они","оно","опять","особенно","остаться","от","ответить","отец","отовсюду","отсюда","очень","первый","перед","писать","плечо","по","под","подумать","пожалуйста","позже","пойти","пока","пол","получить","помнить","понимать","понять","пор","пора","после","последний","посмотреть","посреди","потом","потому","почему","почти","правда","прекрасно","при","про","просто","против","процентов","пятнадцатый","пятнадцать","пятый","пять","работа","работать","раз","разве","рано","раньше","ребенок","решить","россия","рука","русский","ряд","рядом","с","сам","сама","сами","самим","самими","самих","само","самого","самой","самом","самому","саму","самый","свет","свое","своего","своей","свои","своих","свой","свою","сделать","сеаой","себе","себя","сегодня","седьмой","сейчас","семнадцатый","семнадцать","семь","сидеть","сила","сих","сказал","сказала","сказать","сколько","слишком","слово","случай","смотреть","сначала","снова","со","собой","собою","советский","совсем","спасибо","спросить","сразу","стал","старый","стать","стол","сторона","стоять","страна","суть","считать","т","та","так","такая","также","таки","такие","такое","такой","там","твой","твоя","твоё","те","тебе","тебя","тем","теми","теперь","тех","то","тобой","тобою","товарищ","тогда","того","тоже","только","том","тому","тот","тою","третий","три","тринадцатый","тринадцать","ту","туда","тут","ты","тысяч","у","увидеть","уж","уже","улица","уметь","утро","хороший","хорошо","хотеть","хоть","хотя","хочешь","час","часто","часть","чаще","чего","человек","чем","чему","через","четвертый","четыре","четырнадцатый","четырнадцать","что","чтоб","чтобы","чуть","шестнадцатый","шестнадцать","шестой","шесть","эта","эти","этим","этими","этих","это","этого","этой","этом","этому","этот","эту","я"]

    index_dict = {}
    frequency_dict = {}
    whole_list_of_docs = []
    BM25_for_all = {}
    m = Mystem()
    query = m.lemmatize(request.values['request'])
    for filename in glob.iglob('./articles/*.txt'):
        whole_list_of_docs.append(filename)
    list_of_docs = []    
    for i in range(1000):
        list_of_docs.append(whole_list_of_docs[i])
    with open('word_frequency.txt') as f:    
        frequency = json.load(f)

    with open('reverse_index.txt') as f: 
        index_dict = json.load(f) 

    BM25 = BM25_foralldocs(query, list_of_docs, frequency, index_dict, BM25_for_all, stop_words_list, k1)
    
    if BM25 == {}:
        return render_template('search.html', results = [], results_num = 0)
    
    else: 
        list_of_scores = sorted(BM25.items(), key=operator.itemgetter(1), reverse = True)
        for i in range(10):
            if len(list_of_scores) >= (i+1):
                tul = list_of_scores[i]
                with open(list_of_docs[int(tul[0])],'r',encoding='utf-8') as f:
                    text = f.read()
                    results[str((re.findall('@ti\t(.*)', text))[0])] = str((re.findall('@url\t(.*)', text))[0])
                    
            else: 
                pass

        return render_template('search.html', results = results, results_num = len(results))


if __name__ == '__main__':
    app.run(debug = True)

